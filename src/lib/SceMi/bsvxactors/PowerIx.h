// Automaticlly generated by: ::SceMiMsg
// DO NOT EDIT
// C++ Class with SceMi Message passing for Bluespec type:  PowerContext::PowerIx
// Generated on: Tue Sep 06 13:05:34 EDT 2011
// Bluespec version: 2011.08.beta6 2011-08-31 25135

#pragma once

#include "bsv_scemi.h"

class PowerIx : public BSVType {
 public:
  BitT<2> m_powerIx ;

  PowerIx ()
    : m_powerIx()
  {}

  PowerIx ( const SceMiMessageDataInterface *msg, unsigned int &off )
    : m_powerIx(msg, off)
  {}

  unsigned int setMessageData (SceMiMessageDataInterface &msg, const unsigned int off=0) const {
    unsigned int running = off;
    running = m_powerIx.setMessageData( msg, running );
    if (running != off + 2 ) {
      std::cerr << "Mismatch in sizes: " << std::dec <<  running << " vs " << (off + 2) << std::endl;
    }
    return running;
  }

  friend std::ostream & operator<< (std::ostream &os, const PowerIx &obj) {
    BSVType::PutTo * override = lookupPutToOverride ( obj.getClassName() );
    if ( override != 0 ) {
       return override(os, obj );
    }
    os << "{" ;
    os << "powerIx " << obj.m_powerIx ;os << "}" ;
    return os;
  }

  virtual std::ostream & getBitString (std::ostream & os) const {
    m_powerIx.getBitString (os);
  return os;
  }
  

  virtual std::ostream & getBSVType (std::ostream & os) const {
    os << "PowerContext::PowerIx" ;
    return os;
  }

  virtual unsigned int getBitSize () const {
    return 2;
  }

  virtual const char * getClassName() const {
    return "PowerIx" ;
  }

  virtual BSVKind getKind() const {
    return BSV_Struct ;
  }

  virtual unsigned int getMemberCount() const {
    return 1;
  };
  
  virtual BSVType * getMember (unsigned int idx) {
    switch (idx) {
      case 0: return & m_powerIx;
      default: std::cerr << "Index error in getMember for class PowerIx" << std::endl ;
    };
    return 0;
  };
  
  virtual const char * getMemberName (unsigned int idx) const {
    switch (idx) {
      case 0: return "powerIx";
      default: std::cerr << "Index error in getMemberName for class PowerIx" << std::endl ;
    };
    return 0;
  };
  
  
};

